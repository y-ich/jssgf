###
description: test jssgf.js
author: ICHIKAWA, Yuji
copyright: 2014 (C) ICHIKAWA, Yuji (New 3 Rs)
###

assert = require 'assert'
parser = require('../jssgf').parser

describe 'parser', ->
    describe 'collection', ->
        it 'should return the smallest collection', ->
            assert.deepEqual parser.parse('(;)'), [_children: []]
        it 'should includes plural game tree', ->
            assert.deepEqual parser.parse('(;)(;)'), [{_children: []}, {_children: []}]
        it 'should includes plural game tree', ->
            assert.deepEqual parser.parse('(;)\n(;)'), [{_children: []}, {_children: []}]
    describe 'game tree', ->
        it 'should includes empty value of property ', ->
            assert.deepEqual parser.parse('(;TB)'), [_children: [], TB: null]
        it 'should includes empty value of property ', ->
            assert.deepEqual parser.parse('(;TB FF[4])'), [_children: [], TB: null, FF: '4']
        it 'should includes a normal game tree', ->
            assert.deepEqual parser.parse('(;FF[4])'), [_children: [], FF: '4']
        it 'should includes a normal game tree', ->
            assert.deepEqual parser.parse('(;FF[4]GM[1])'), [_children: [], FF: '4', GM: '1']
        it 'should includes a normal game tree', ->
            assert.deepEqual parser.parse('(;FF[4]GM[1]EV[])'), [_children: [], FF: '4', GM: '1', EV: '']
        it 'should includes a normal game tree', ->
            assert.deepEqual parser.parse('(;FF[4]GM[1]EV[ ])'), [_children: [], FF: '4', GM: '1', EV: ' ']
        it 'should treats a soft line break', ->
            assert.deepEqual parser.parse('(;FF[4]GM[1]EV[a\\\nb])'), [_children: [], FF: '4', GM: '1', EV: 'ab']
        it 'should treats an escaped ]', ->
            assert.deepEqual parser.parse('(;FF[4]GM[1]EV[\\]])'), [_children: [], FF: '4', GM: '1', EV: ']']
        it 'should treats an escaped ]', ->
            assert.deepEqual parser.parse('(;FF[4]GM[1]EV[()])'), [_children: [], FF: '4', GM: '1', EV: '()']
    describe 'stringify', ->
        it 'should return string', ->
            sgf = '(;FF[4])'
            assert.equal parser.stringify(parser.parse sgf), sgf
    describe 'isSgf', ->
        it 'should return true', ->
            sgf = '(;FF[4])'
            assert.equal parser.isSgf(sgf), true
    describe 'nthMoveNode', ->
        it 'should return next node', ->
            sgf = '''
                (;FF[4]AP[GOWrite:2.3.46]ST[2]GM[1]SZ[19]CA[UTF-8]FG[259:]DT[1821-11-17]WR[六段]PM[2]PB[井上安節]RE[W+12]KM[0]BR[五段]GN[文政四年十一月十七日　御城碁]PW[本因坊丈和]
                ;B[qd]
                ;W[dc]
                ;B[po]
                ;W[oc]
                ;B[pe]
                ;W[pq]
                ;B[qq]
                ;W[qj]
                ;B[cp]
                ;W[eq]
                ;B[nd]
                ;W[mc]
                ;B[ce]
                ;W[cl]
                ;B[do]
                ;W[ci]
                ;B[fp]
                ;W[gq]
                ;B[gc]
                ;W[ed]
                ;B[jc]
                ;W[df]
                ;B[ql]
                ;W[qg]
                ;B[pp]
                ;W[cr]
                ;B[pc]
                ;W[md]
                ;TR[cg]B[ne]C[早△印エ打ヨシ]
                ;W[lf]
                ;C[不宜34ノ所吉]B[jf]
                ;W[hd]
                ;C[星二棒二引ヨシ]B[hc]
                ;W[je]
                ;B[kd]
                ;W[me]
                ;B[ke]
                ;W[kf]
                ;B[jg]
                ;W[ie]
                ;B[fe]
                ;W[hf]
                ;B[kh]
                ;W[lh]
                ;B[fd]
                ;W[gg]
                ;B[fg]
                ;W[de]
                ;B[fh]
                ;W[gh]
                ;C[悪56ノ処エ打吉]B[gi]
                ;W[hi]
                ;B[gf]
                ;W[kj]
                ;B[ki]
                ;W[li]
                ;C[唯59ノ処エ打吉]B[hg]
                ;W[hh]
                ;B[jj]
                ;W[ij]
                ;B[ji]
                ;W[ig]
                ;B[lj]
                ;W[gj]
                ;B[di]
                ;W[dh]
                ;B[fi]
                ;W[dj]
                ;B[fj]
                ;W[gk]
                ;B[dk]
                ;W[fl]
                ;B[mj]
                ;W[nf]
                ;B[cj]
                ;W[ei]
                ;C[摧テモ97ノ処エ不打バ無申訣]B[el]
                ;W[ck]
                ;B[em]
                ;W[jl]
                ;B[jk]
                ;W[kl]
                ;B[kk]
                ;W[ik]
                ;B[of]
                ;W[nh]
                ;B[oh]
                ;W[ni]
                ;B[ll]
                ;W[oi]
                ;B[ph]
                ;W[pl]
                ;B[qm]
                ;W[ib]
                ;B[ic]
                ;W[kb]
                ;B[ej]
                ;W[bj]
                ;B[nc]
                ;W[fn]
                ;B[fm]
                ;W[gn]
                ;B[gm]
                ;W[hn]
                ;B[en]
                ;W[ep]
                ;B[eb]
                ;W[db]
                ;B[ng]
                ;W[mg]
                ;B[mf]
                ;W[kc]
                ;B[jd]
                ;W[nf]
                ;B[hm]
                ;W[im]
                ;B[mf]
                ;W[ef]
                ;B[ff]
                ;W[nf]
                ;B[in]
                ;W[jn]
                ;B[io]
                ;W[gp]
                ;B[mf]
                ;W[jo]
                ;B[ip]
                ;W[nf]
                ;B[jp]
                ;W[lo]
                ;B[lp]
                ;W[mp]
                ;B[lq]
                ;W[mn]
                ;B[nl]
                ;W[og]
                ;B[lm]
                ;W[mq]
                ;B[km]
                ;W[jm]
                ;B[hr]
                ;W[gr]
                ;B[go]
                ;W[fo]
                ;B[eo]
                ;W[ho]
                ;B[mr]
                ;W[nr]
                ;B[lr]
                ;W[no]
                ;B[oq]
                ;W[nm]
                ;B[om]
                ;W[nq]
                ;B[mm]
                ;W[hq]
                ;B[iq]
                ;W[jr]
                ;B[kp]
                ;W[ln]
                ;B[ir]
                ;W[op]
                ;B[hl]
                ;W[il]
                ;B[pr]
                ;W[oo]
                ;B[nn]
                ;W[on]
                ;B[pg]
                ;W[pn]
                ;B[pm]
                ;W[qn]
                ;B[pi]
                ;W[jb]
                ;B[mb]
                ;W[lb]
                ;B[rp]
                ;W[nm]
                ;B[hk]
                ;W[hj]
                ;B[nn]
                ;W[or]
                ;B[pq]
                ;W[nm]
                ;B[br]
                ;W[cq]
                ;B[nn]
                ;W[rn]
                ;B[rm]
                ;W[nm]
                ;B[ok]
                ;W[cn]
                ;B[nn]
                ;W[rr]
                ;B[qo]
                ;W[nm]
                ;B[bq]
                ;W[bo]
                ;B[nn]
                ;W[sn]
                ;B[sp]
                ;W[nm]
                ;B[he]
                ;W[nn]
                ;B[gd]
                ;W[ge]
                ;B[bp]
                ;W[fb]
                ;B[he]
                ;W[dl]
                ;B[ek]
                ;W[ge]
                ;B[gb]
                ;W[ea]
                ;B[he]
                ;W[hs]
                ;B[is]
                ;W[ge]
                ;B[cs]
                ;W[er]
                ;B[he]
                ;W[ms]
                ;B[kr]
                ;W[ge]
                ;B[gl]
                ;W[fk]
                ;B[he]
                ;W[ls]
                ;B[jq]
                ;W[ge]
                ;B[co]
                ;W[bn]
                ;B[he]
                ;W[rk]
                ;B[id]
                ;W[rh]
                ;B[qf]
                ;W[pj]
                ;B[nb]
                ;W[ng]
                ;B[pk]
                ;W[rf]
                ;B[re]
                ;W[sf]
                ;B[if]
                ;W[ps]
                ;B[qs]
                ;W[os]
                ;B[qr]
                ;W[ds]
                ;B[bs]
                ;W[qk]
                ;B[hg]
                ;W[ih]
                ;B[eh]
                ;W[di]
                ;B[gs]
                ;W[fs]
                ;B[se]
                ;W[qi]
                ;B[sm]
                ;W[sl]
                ;B[hp]
                ;W[fq]
                ;B[eg]
                ;W[dg]
                ;B[dm]
                ;W[cm]
                ;B[fc]
                ;W[ec]
                ;B[ga]
                ;W[la]
                ;B[fa]
                ;W[eb]
                ;B[ld]
                ;W[lc]
                ;B[nj]
                ;W[ks]
                ;B[js]
                ;W[ma]
                ;B[na]
                ;W[ap]
                ;B[aq]
                ;W[ao]
                ;B[dq]
                ;W[dr]
                ;B[dp]
                ;W[mi]
                ;B[kg]
                ;W[ro]
                ;B[ia]
                ;W[ja]
                ;B[ha]
                ;W[ns]
                ;B[hf]
                ;W[hs]C[右之通大悪手難数
                實二余藝此頃ハ四段位限
                惣テ十一世因碩之打碁文政七申年以前ハ如芥
                申酉年二年二的然ト昇達セシヲ心中二有覚
                諸君子明察セヨ]
                )
                '''
            c = parser.parse(sgf)
            n = parser.nthMoveNode(c[0], 32)
            n._children = []
            
            console.log  parser.stringify(c)
            assert.equal parser.stringify(parser.parse(sgf)), 'md'

